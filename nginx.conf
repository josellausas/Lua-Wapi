worker_processes ${{NUM_WORKERS}};
error_log stderr notice;
daemon off;
env LAPIS_ENVIRONMENT;

events {
  worker_connections 1024;
}

http {
  include mime.types;

  server {
    lua_code_cache off;
    listen ${{PORT}};
    server_name www.llau.systems;
    charset utf-8;
    
    # This redirects everything to https
    if ($http_x_forwarded_proto != "https") 
    {
      # Redirect to safe https
      return 301 https://$host$request_uri;
    }

    # This is my heroku resolver
    resolver 172.16.0.23;

    # Root Index
    location / {
      set $_url "";
      default_type text/html;
      content_by_lua_file "app_wrap.lua";
    }

    location /admin {
        default_type text/html;
        content_by_lua_file "app_wrap.lua";
    }

    # location ~/oauth/access_token {
    #   # Provides the token
    #   content_by_lua_file "get_oauth_access.lua";
    # }

    # location /v1 {
    #   # Checks that we have the correct access
    #   access_by_lua_file "check_oauth_access.lua"
    # }

    location /console 
    {
        access_by_lua 
        auth_basic "closed site";
        auth_basic_user_file .passwrds;
        default_type text/html;
        content_by_lua_file "app_wrap.lua";
    }

    #This enables us to make http requests
    location /proxy {
    internal;
    rewrite_by_lua "
      local req = ngx.req

      for k,v in pairs(req.get_headers()) do
        if k ~= 'content-length' then
          req.clear_header(k)
        end
      end

      if ngx.ctx.headers then
        for k,v in pairs(ngx.ctx.headers) do
          req.set_header(k, v)
        end
      end
    ";
    resolver 8.8.8.8;
    proxy_http_version 1.1;
    proxy_pass $_url;
    }

    location /static/ {
      alias static/;
    }

    location /css/ {
      alias static/css/;
    }

    location /fonts/ {
      alias static/fonts/;
    }

    location /img/ {
      alias static/img/;
    }

    location /js/ {
      alias static/js/;
    }

    location /mailer/ {
      alias static/mailer/;
    }

    location /sass/ {
      alias static/sass/;
    }

    location /dist/ {
      alias static/dist/;
    }

    location /bower_components/ {
      alias static/bower_components/;
    }

    location /favicon.ico {
      alias static/favicon.ico;
    }

  }
}
