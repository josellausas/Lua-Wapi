//
// Mixins
// --------------------------------------------------

// Normal Button Variants
@mixin button-variant($bg-color) {
  background-color: $bg-color;
  &:hover {
    background-color: lighten($bg-color, 10%);
  }
}

// Ghost Button Variants
@mixin ghost-button-variant($color, $border-color) {
  background-color: transparent;
  color: $color;
  border-color: $border-color;
  &:hover {
    color: #fff;
    background-color: $border-color;
  }
}

// Placeholder text
@mixin placeholder($color: $input-color-placeholder) {
  // Firefox
  &::-moz-placeholder {
    color: $color;
    opacity: 1; // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526
  }
  &:-ms-input-placeholder {
    color: $color;
  } // Internet Explorer 10+
  &::-webkit-input-placeholder  {
    color: $color;
  } // Safari and Chrome
}

@mixin font-smoothing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// App Intro breakpoints
   
$S:     480px;   
$M:     850px;     
$L:     1070px;     
$XL:    1440px;

// media queries
@mixin MQ($canvas) {
  @if $canvas == S {
   @media only screen and (min-width: $S) { @content; } 
  }
  @else if $canvas == M {
   @media only screen and (min-width: $M) { @content; } 
  }
  @else if $canvas == L {
   @media only screen and (min-width: $L) { @content; } 
  }
}

// breakpoints
   
$SM:     480px;   
$MD:     768px;     
$LG:     1050px;     

// media queries
@mixin MQU($canvas) {
  @if $canvas == SM {
   @media only screen and (min-width: $SM) { @content; } 
  }
  @else if $canvas == MD {
   @media only screen and (min-width: $MD) { @content; } 
  }
  @else if $canvas == LG {
   @media only screen and (min-width: $LG) { @content; } 
  }
}

// super light grid - it works with the .cd-container class inside style.scss
@mixin column($percentage, $float-direction:left) {
  width: 100% * $percentage;
  float: $float-direction;
}

// rem fallback - credits: http://zerosixthree.se/
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

// center vertically and/or horizontally an absolute positioned element
@mixin center($xy:xy) {
  @if $xy == xy {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    @include transform(translateX(-50%) translateY(-50%));
  }
  @else if $xy == x {
    left: 50%;
    right: auto;
    @include transform(translateX(-50%));
  }
  @else if $xy == y {
    top: 50%;
    bottom: auto;
    @include transform(translateY(-50%));
  }
}